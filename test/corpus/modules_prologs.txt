4 Modules and Prologs 
==================
4.1 Version Declaration 
==================

xquery version "3.0" encoding "utf-8";
()

---
 
  (module 
   (version_declaration (string_literal) (string_literal)) 
   (main_module (parenthesized_expr)))


==================
4.2 Module Declaration
==================

module namespace gis = "http://example.org/gis-functions";


---

(module 
 (library_module 
  (module_declaration (identifier) (string_literal))))

==================
4.3 Boundary-space Declaration 
==================

declare boundary-space preserve;
()


---

(module 
 (main_module 
  (boundary_space_declaration) (parenthesized_expr)))

==================
4.4 Default Collation Declaration 
==================

declare default collation "http://example.org/languages/Icelandic";
()

---

(module 
 (main_module 
  (default_collation_declaration (string_literal))
  (parenthesized_expr)))

==================
4.5 Base URI Declaration
==================

declare base-uri "http://example.org";
()

---

(module 
 (main_module 
  (base_uri_declaration (string_literal))
  (parenthesized_expr)))

==================
4.6 Construction Declaration 
==================

declare construction strip;
()

---

(module 
 (main_module 
  (construction_declaration)
  (parenthesized_expr)))

==================
4.7 Ordering Mode Declaration
==================

declare ordering unordered;
()

---

(module 
 (main_module 
  (ordering_mode_declaration) 
  (parenthesized_expr)))

==================
4.8 Empty Order Declaration
==================

declare default order empty least;
()

---

(module 
 (main_module 
  (empty_order_declaration) 
  (parenthesized_expr)))

==================
4.9 Copy-Namespaces Declaration
==================

declare copy-namespaces preserve, no-inherit;
()

---

(module (main_module (copy_namespaces_declaration) (parenthesized_expr)))

==================
4.10 Decimal Format Declaration
==================

declare decimal-format local:de 
  decimal-separator = "," grouping-separator = ".";
()

---

(module 
 (main_module 
  (decimal_format_declaration (identifier) (identifier) (string_literal) (string_literal)) 
  (parenthesized_expr))) 

==================
4.11 Schema Import 
==================

import schema namespace soap="http://www.w3.org/2003/05/soap-envelope" 
    at "http://www.w3.org/2003/05/soap-envelope/"; 
import schema default element namespace "" at "http://example.org/xyz.xsd";
()

---

(module 
 (main_module 
  (schema_import (identifier) (string_literal) (string_literal)) 
  (schema_import (string_literal) (string_literal)) 
  (parenthesized_expr)))

==================
4.12 Module Import  
==================

import module namespace geo = "http://example.org/geo-functions"; 
()

---

(module 
 (main_module 
  (module_import (identifier) (string_literal)) 
  (parenthesized_expr)))

==================
4.13 Namespace Declaration 
==================

declare namespace foo = "http://example.org";
<foo:bar> Lentils </foo:bar>

---

(module 
 (main_module 
 (namespace_declaration (identifier) (string_literal)) 
  (direct_element 
   (start_tag (identifier (identifier) (identifier))) 
   (element_text (char_data))
   (end_tag (identifier (identifier) (identifier))))))

==================
4.14 Default Namespace Declaration 
==================

declare default element namespace "http://example.org/names";
declare default function namespace "http://www.w3.org/2005/xpath-functions/math";
()

---

(module 
 (main_module 
  (default_namespace_declaration (string_literal)) 
  (default_namespace_declaration (string_literal)) 
  (parenthesized_expr)))

==================
4.15 Annotations
==================

declare 
   %java:method("java.lang.StrictMath.copySign") 
   function smath:copySign($magnitude, $sign) 
   external;
   ()

---

(module 
 (main_module 
  (function_declaration 
   (annotation (identifier) (identifier) (string_literal)) (identifier) (identifier) 
   (param_list (parameter (identifier)) (parameter (identifier)))) 
  (parenthesized_expr)))
 

==================
4.16 Variable Declaration 
==================

declare variable $x as xs:integer := 7;
()

---

(module 
 (main_module 
  (variable_declaration 
   (identifier) 
   (type_declaration (sequence_type (atomic_or_union_type (identifier) (identifier)))) 
   (integer_literal)) 
  (parenthesized_expr)))

  
==================
4.17 Context Item Declaration 
==================

declare context item as element(foo) external;
()

---

(module 
 (main_module 
  (context_item_declaration 
   (type_declaration (sequence_type (element_test (element_test_params (identifier)))))) 
  (parenthesized_expr)))


==================
4.18 Function Declaration with params, as types and return type
==================

module namespace foo = "http://example.org/#foo";
declare 
function foo:summary($emps as element(employee)*) as element(dept)* { 
};

---

(module 
 (library_module 
  (module_declaration (identifier) (string_literal)) 
  (function_declaration (identifier) (identifier) 
   (param_list 
    (parameter (identifier) (type_declaration (sequence_type (element_test (element_test_params (identifier))) (occurrence_indicator))))) 
   (type_declaration (sequence_type (element_test (element_test_params (identifier))) (occurrence_indicator))) 
   (enclosed_expr))))
   

  
==================
4.18 Function Declaration with annotations (baseX docs example )
==================

module namespace page = 'http://basex.org/examples/web-page';
declare 
%rest:path("hello/{$who}") 
%rest:GET 
function page:hello($who) {
 <response> { $who } </response>
};

---

(module 
 (library_module 
  (module_declaration (identifier) (string_literal)) 
  (function_declaration (annotation (identifier) (identifier) (string_literal)) 
   (annotation (identifier) (identifier)) (identifier) (identifier) 
   (param_list (parameter (identifier))) 
   (enclosed_expr 
    (direct_element 
     (start_tag (identifier (identifier))) 
     (element_text (char_data)) 
     (element_text (enclosed_expr (var_ref (identifier)))) 
     (element_text (char_data)) 
     (end_tag (identifier (identifier))))))))



==================
4.18 Function Declaration external
==================

declare  function smath:copySign( $magnitude, $sign ) external;
()

---

(module 
 (main_module 
  (function_declaration (identifier) (identifier) 
   (param_list (parameter (identifier)) (parameter (identifier)))) 
  (parenthesized_expr)))
 

==================
4.19 Option Declaration 
==================

module namespace foo = "http://example.org/#foo";
declare namespace output = 'http://www.w3.org/2010/xslt-xquery-serialization';
declare option output:method 'text';

---

(module 
 (library_module (module_declaration (identifier) (string_literal)) 
  (namespace_declaration (identifier) (string_literal)) 
  (option_declaration (identifier) (identifier) (string_literal))))
