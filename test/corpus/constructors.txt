3.9 Node Constructors 
3.10 String Constructors 
3.11 Maps and Arrays 

==================
3.9.1 Direct Element with plain text
==================

 <title>Harold and the Purple Crayon</title>

-------------------

(module 
 (main_module 
  (direct_element 
   (start_tag (identifier (identifier))) 
   (element_text (char_data)) 
   (end_tag (identifier (identifier))))))
 

==================
3.9.1 Direct Element with char reference
==================

 <div>&#8364;99.50</div>

-------------------

(module 
 (main_module 
  (direct_element 
   (start_tag (identifier (identifier))) 
   (element_text (char_ref)) 
   (element_text (char_data)) 
   (end_tag (identifier (identifier))))))

==================
3.9.1 Direct Element with entities
==================

 <title>Ben &amp; Jerry&apos;s  </title>

-------------------

(module 
 (main_module 
  (direct_element 
   (start_tag (identifier (identifier))) 
   (element_text (char_data)) 
   (element_text (predefined_entity_ref)) 
   (element_text (char_data))
   (element_text (predefined_entity_ref)) 
   (element_text (char_data)) 
   (end_tag (identifier (identifier))))))

==================
3.9.1 Direct Element with enclosed expression
==================

 <title>Harold and the { $item }</title>

-------------------

(module 
(main_module 
(direct_element 
(start_tag (identifier (identifier))) 
(element_text (char_data)) 
(element_text (enclosed_expr (var (EQName (identifier))))) 
(end_tag (identifier (identifier))))))

==================
3.9.1 Direct Element with embeded element
==================

 <response>
    <title>Hello Word</title>
  </response>

-------------------

(module 
 (main_module 
  (direct_element 
   (start_tag (identifier (identifier))) 
   (element_text (char_data)) 
   (direct_element 
    (start_tag (identifier (identifier))) 
    (element_text (char_data)) 
    (end_tag (identifier (identifier)))) 
   (element_text (char_data)) 
   (end_tag (identifier (identifier))))))
 
==================
3.9.3.1 Computed Element Constructors 
==================

element book {
   element { 'page' } { 'dummy' }
}

---

(module 
 (main_module 
  (comp_elem_constructor (EQName (identifier)) 
   (enclosed_expr 
    (comp_elem_constructor (string_literal) 
     (enclosed_expr (string_literal)))))))


==================
3.9.3.2 Computed Attribute Constructors 
==================

attribute size {4 + 3}

---

(module 
 (main_module 
  (comp_attr_constructor (EQName (identifier)) 
   (enclosed_expr (additive_expr (integer_literal) (integer_literal))))))

==================
3.9.3.3 Document Node Constructors
==================

document {  } 

---

(module 
 (main_module 
  (comp_doc_constructor 
   (enclosed_expr))))


==================
3.9.3.4 Text Node Constructors 
==================

text { 'hello' } 

---

(module 
 (main_module 
  (comp_text_constructor 
   (enclosed_expr (string_literal)))))

==================
3.9.3.6 Computed Comment Constructors
==================

comment { } 

---

(module 
 (main_module 
  (comp_comment_constructor 
   (enclosed_expr))))

==================
3.10 String Constructors 
==================

``[`{$s}` fish]``

---

(module
 (main_module
 (string_constructor 
  (interpolation (var (EQName (identifier)))) 
  (char_group)
 )))



==================
3.11.1.1 Map Constructors
==================

map { 
'key1' : 'value1',
'key2' : 'value2'
} 

---

(module 
 (main_module
 (map_constructor
  (map_entry (string_literal) (string_literal)) 
  (map_entry (string_literal) (string_literal)) 
 )))

==================
3.11.2.1 Curly Array Constructor
==================

array { 'one', 'two' } 

---

(module
 (main_module
  (curly_array_constructor
   (enclosed_expr  
    (string_literal)
    (string_literal)))))

==================
3.11.2.1 Square Array Constructor
==================

[ 'one', 'two' ] 

---

(module 
 (main_module
 (square_array_constructor
  (string_literal)
  (string_literal)
 )))

==================
3.11.2.2 TODO! should resolve to Function call - Array Lookup using Function Call Syntax 
==================

[ 'one', 'two' ](2) 

---

(module 
 (main_module 
  (path_expr 
   (square_array_constructor (string_literal) (string_literal)) 
   (arguments (integer_literal))))) 

==================
3.11.3.1 TODO! Unary Lookup with predicate
==================

$mp[?name='Mike'] 

---

  (module (main_module (path_expr (var (EQName (identifier))) (predicate (comparison_expr (unary_lookup (NCName (identifier))) (string_literal)))))) 

==================
3.11.3.1 Unary Lookup with bang
==================

 $maps ! ?name='Mike'

---

(module 
 (main_module 
  (bang_expr (var (EQName (identifier))) 
   (comparison_expr 
    (unary_lookup (NCName (identifier))) 
    (string_literal)))))

==================
3.11.3.2 Postfix Lookup with array unary lookup: TODO? should be postfix_expr
==================

[ 'one', 'two' ]?2

---

(module 
 (main_module 
  (path_expr 
   (square_array_constructor (string_literal) (string_literal)) 
   (postfix_lookup (lookup_digit)))))
