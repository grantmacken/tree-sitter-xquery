3.12 FLWOR Expressions

==================
3.12.1 Variable Bindings single bind
==================

let $x := 47
return ()

---

(module 
 (main_module 
  (flwor_expr 
   (let_clause (let_binding (identifier) (integer_literal))) 
   (return_clause (parenthesized_expr)))))


==================
3.12.1 Variable  multiple binds
==================

let $x := 47, $y := f($x)
return ()

---

(module 
 (main_module 
  (flwor_expr 
   (let_clause 
    (let_binding (identifier) (integer_literal)) 
    (let_binding (identifier) (function_call (identifier) (arg_list (var_ref (identifier)))))) 
   (return_clause (parenthesized_expr)))))
 
==================
3.12.1 Variable Bindings accompanied by a type declaration
==================

let $salary as xs:decimal :=  "cat"
return  $salary 

---

(module 
 (main_module 
  (flwor_expr 
   (let_clause 
    (let_binding (identifier) 
     (type_declaration (sequence_type (atomic_or_union_type (identifier) (identifier))))
     (string_literal)))
   (return_clause (var_ref (identifier))))))

==================
3.12.2 For Clause 
==================

for $x in $expr1
return  $x 

---

(module 
 (main_module 
  (flwor_expr 
   (for_clause 
    (var_ref (identifier)) 
    (var_ref (identifier))) 
   (return_clause (var_ref (identifier))))))

==================
3.12.5 Where Clause
==================

for $x at $i in $inputvalues
where $i mod 100 = 0
return $x 

---

(module 
 (main_module 
  (flwor_expr 
   (for_clause (var_ref (identifier)) 
    (var_ref (identifier)) (var_ref (identifier))) 
   (where_clause (comparison_expr (multiplicative_expr (var_ref (identifier)) (integer_literal)) (integer_literal))) 
   (return_clause (var_ref (identifier))))))

==================
3.12.6 Count Clause 
==================

for $p in $products
order by $p/sales descending
count $rank
where $rank <= 3
return
()

---

(module 
 (main_module 
  (flwor_expr 
   (for_clause (var_ref (identifier)) (var_ref (identifier))) 
   (order_by_clause (path_expr (var_ref (identifier)) (name_test (identifier)))) 
   (count_clause (identifier)) 
   (where_clause (comparison_expr (var_ref (identifier)) (integer_literal))) 
   (return_clause (parenthesized_expr)))))


==================
3.12.7 Group By Clause TODO more examples
==================
let $g2 := $expr1
let $g3 := $expr2
group by $g1, $g2, $g3 collation "Spanish"
return $g1

---

(module 
 (main_module 
 (flwor_expr 
  (let_clause (let_binding (identifier) (var_ref (identifier)))) 
  (let_clause (let_binding (identifier) (var_ref (identifier)))) 
  (group_by_clause (identifier) (identifier) (identifier) (string_literal)) 
  (return_clause (var_ref (identifier))))))

==================
3.12.8 Order By Clause 
==================

for $e in $employees
order by $e/salary descending
return $e/name

---

(module 
 (main_module 
  (flwor_expr 
   (for_clause (var_ref (identifier)) (var_ref (identifier))) 
   (order_by_clause (path_expr (var_ref (identifier)) (name_test (identifier)))) 
   (return_clause (path_expr (var_ref (identifier)) (name_test (identifier)))))))




