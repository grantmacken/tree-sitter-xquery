3.3 Path Expressions

==================
3.3 Path Expr - leading lone slash
==================

/

---

(module (path_expr))

==================
3.3 Path Expr - lone slash or double with rel path,
==================

 //child::div1

---

(module (path_expr (name_test (EQName (identifier)))))

==================
3.3 Path Expr - just a relative path'
==================

/

---

(module (path_expr))

==================
3.3.1.1 Path operator (/) wildcard
==================

$node/*

---

(module 
  (main_module 
    (path_expr 
      (var (EQName (identifier))) 
      (abbrev_forward_step 
        (name_test (wildcard))))))

==================
3.3.1.1 Path operator (/) kind test
==================

$node/text()

---

(module 
  (main_module 
    (path_expr 
      (var (EQName (identifier))) 
      (abbrev_forward_step (text_test)))))

==================
3.3 Path - Relative Path Expressions
==================

child::div1/child::para

---

(module 
(path_expr 
  (name_test (EQName (identifier))) 
  (name_test (EQName (identifier)))))

==================
3.3 Path - 2:  Node Tests with wildcard
==================

child::element(*, po:address)

---

(module 
(path_expr 
(element_test 
   (element_test_params 
   (wildcard) 
   (EQName (identifier) (identifier))))))

==================
3.3 Path - 3: Predicates within Steps
==================

 child::chapter[2]

---

  (module (path_expr (name_test (EQName (identifier))) (predicate (integer_literal))))

==================
3.3 Path - 4: Unabbreviated Syntax
==================

child::para

---

 (module (path_expr (name_test (EQName (identifier)))))


==================
3.3 Path - 4: Unabbreviated Syntax with steps and predicate
==================

child::para[fn:position() = 1]

---

(module 
 (path_expr 
  (name_test (EQName (identifier))) 
  (predicate 
  (comparison_expr (function_call (EQName (identifier) (identifier)) (argument_list)) (integer_literal)))))


==================
3.3 Path - 5: Abbreviated Syntax  with EQName (identifier)
==================

section/para

---

(module (path_expr (abbrev_forward_step (name_test (EQName (identifier)))) (abbrev_forward_step (name_test (EQName (identifier))))))

==================
3.3 Path - 5: Abbreviated Syntax with attribute
==================

section/@id

---

(module 
(path_expr 
  (abbrev_forward_step (name_test (EQName (identifier)))) 
  (abbrev_forward_step 
  (abbrev_attr) 
  (name_test (EQName (identifier))))))



==================
3.3 Path - 5: Abbreviated Syntax with attribute wildcard
==================

@*

---

(module 
 (path_expr 
  (abbrev_forward_step 
   (abbrev_attr) (name_test (wildcard)))))

==================
3.3 Path - 5: Abbreviated Syntax with reverse up
==================

..

---

 (module (path_expr (abbrev_reverse_step)))


